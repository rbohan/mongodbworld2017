Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/trusty64"

  config.vm.network "private_network", ip: "192.168.16.100"

  config.vm.hostname = "world2"

  config.vm.provider "virtualbox" do |vb|
    vb.memory = "4096"
    vb.cpus = "1"
    vb.name = "World2017DemoVM2"
  end

$script = <<SCRIPT
echo "Provisioning..."
date > /etc/vagrant_provisioned_at

sudo apt-get -qq update
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 0C49F3730359A14518585931BC711F9BA15703C6
echo "deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.4.list

sudo apt-get -qq update
sudo apt-get -qq install -y --force-yes mongodb-org mysql-client libmysqlclient-dev zip

echo "Creating Users and Roles ..."
mongo admin --quiet --eval "db.createRole({role:'viewerRole', privileges: [ {resource: { cluster:true }, actions:['listDatabases'] }, {resource: { db: '', collection: ''}, actions:['listCollections', 'listIndexes', 'top', 'inprog', 'serverStatus']}, {resource: { db: 'flights', collection: 'airlines'}, actions:['find','collStats','dbStats','indexStats','listDatabases','listCollections','listIndexes']} ], roles: [] })"
mongo admin --quiet --eval "db.createUser( { user: 'root', pwd: 'root', roles: [ 'root' ] })"
mongo admin --quiet --eval "db.createUser( { user: 'viewer', pwd: 'viewer', roles: [ 'viewerRole' ] })"

echo "Creating Databases ..."
mongoimport -d flights -c airlines /vagrant/DATA/airlines.json --jsonArray
mongoimport -d flights -c TOPSECRET /vagrant/DATA/space.json

echo "Decompressing and Installing BI Connector"
mkdir /home/vagrant/connector_v2
pushd /home/vagrant/connector_v2
wget https://info-mongodb-com.s3.amazonaws.com/mongodb-bi/v2/mongodb-bi-linux-x86_64-ubuntu1404-v2.2.0.tgz -nv
tar -xf mongodb-bi-linux-x86_64-ubuntu1404-v2.2.0.tgz
popd

echo "Decompressing and Installing mongosql_auth plugin"
mkdir /home/vagrant/mongosql_auth
pushd /home/vagrant/mongosql_auth
wget https://github.com/mongodb/mongosql-auth-c/releases/download/v1.0.0/mongosql-auth-linux-x86_64-ubuntu-1404-v1.0.0.tgz -nv
tar -xf mongosql-auth-linux-x86_64-ubuntu-1404-v1.0.0.tgz
sudo mkdir -p $(mysql_config --plugindir)
sudo cp mongosql-auth-linux-x86_64-ubuntu-1404/lib/mongosql_auth.so $(mysql_config --plugindir)
popd

sudo chown -R vagrant:vagrant /home/vagrant/connector_v2

export PATH=/home/vagrant/connector_v2/mongodb-bi-x86_64-ubuntu1404-linux-v2.2.0/bin:$PATH
echo "export PATH=/home/vagrant/connector_v2/mongodb-bi-x86_64-ubuntu1404-linux-v2.2.0/bin:$PATH" >> .bashrc

echo "Creating DRDL files ..."
mkdir /home/vagrant/schema

mongodrdl -d flights -c airlines -o schema/airlines.drdl
mongodrdl -d flights -c TOPSECRET -o schema/topsecret.drdl

sudo chown -R vagrant:vagrant /home/vagrant/schema

echo "Setting up mongosqld scripts"

echo "mongosqld --auth --schemaDirectory=/home/vagrant/schema \
 --addr=0.0.0.0:3307 -vv" > startmongosqld.sh
chmod +x startmongosqld.sh

echo "mysql --default-auth=mongosql_auth --host=localhost --port=3307 --protocol=tcp -u root -p" > mysql.sh
chmod +x mysql.sh

echo "Restarting mongod (with auth)"
sudo service mongod stop
sudo sed -i "s/.*bindIp.*/  bindIp: 0.0.0.0/" /etc/mongod.conf
sudo sed -i "s/#security:/security:\\n  authorization: enabled/" /etc/mongod.conf
sudo service mongod start

sudo chown -R vagrant:vagrant /home/vagrant

SCRIPT
config.vm.provision "shell", inline: $script

end
